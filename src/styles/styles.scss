/* You can add global styles to this file, and also import other style files */

@use 'sass:color';
/* Variable font used throughout */
$fontDefault: clamp(0.5rem, 2.5vw, 1rem);

$colorPrimary: #1976d2; /* Example primary color */
$colorWarn: #f44336; /* Example warn color */
$colorAccent: #ff4081; /* Example accent color */
$colorBackground: #e3e3e3; /* Example background color */

body {
  height: 100%;
  width: 100%;
  margin: 0px;
  overflow: hidden; /*  Disable scrollbars */
  font-family: Roboto, "Helvetica Neue", sans-serif;
}

/* Workaround for https://github.com/angular/material2/issues/4580.
Note: Global style, as material elements, e.g. mat-form-field, are part of Angular Material and has its own encapsulation which component styles can't override */

// Force dropdown panel background color for mat-form-field
.mat-mdc-select-panel {
  background-color: $colorBackground !important;
}
/* Highlight radio button groups with a box */
.smallRadio {
  background: $colorBackground;
  border: 2px solid $colorPrimary;
  border-radius: 8px;
  padding: 8px;
  margin-top: 8px;
  margin-bottom: 8px;
}

// Customize spacing between mat-select dropdown options
.mat-mdc-option {
  min-height: 10px; // Adjust height as needed
  padding-top: 5px; // Adjust vertical padding as needed
  padding-bottom: 5px;
}

/* The Snackbar call passes in 'custom-snackbar' as a custom class */
.custom-snackbar .mat-mdc-snack-bar-label {
  max-width: 100%;
  background: #fff; // Opaque white background
  color: $colorPrimary;
  box-shadow: 0 2px 10px rgba(0,0,0,0.2);
  opacity: 1 // Ensure full opacity
}
.custom-snackbar .mat-mdc-snack-bar-actions {
  max-width: 100%; /* Ensure actions don't overflow */
  color: $colorAccent;
}

/* Used in the three scenario menus */
@mixin scenario-menu {
  /* Fill the container element - better for flex */
  width: 100%;
  margin-top: 0.1rem;
  margin-bottom: 0.1rem;
  font-size : $fontDefault;
  background: $colorBackground; /* Default background color */
  border-radius: 0.25rem; /* Rounded corners */
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2); /* Subtle shadow for depth */
  transition: background-color 0.3s ease; /* Smooth transition for background color */
  &:hover {
    background-color: color.adjust($colorBackground, $lightness: 5%);
  }
}
